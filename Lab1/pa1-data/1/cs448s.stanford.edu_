frontpage cs448s spring 2010 frontpage beyond programmable shading people mike houston amd aaron lefohn intel location and schedule gates 400 tth 12 50 2 05 course description there are strong indications that the future of interactive graphics programming is a more flexible model than today's opengl direct3d pipelines researchers and developers are combining flexible parallel graphics architectures and emerging parallel programming models with the traditional graphics pipeline to create new graphics pipelines and algorithms that significantly increase image quality this course introduces students to the parallel graphics architectures and the parallel programming models that are fueling this change and teaches students how to create interactive rendering algorithms and pipelines that extend or are completely different than the traditional direct3d opengl interactive rendering pipeline the course also introduces students to many of the unsolved rendering and programming model research topics in this field the first part of the course introduces parallel graphics architectures parallel programming models for graphics and parallel algorithm primitives the second part of the course looks at cases studies from recent rendering algorithms and systems discussing the mix of parallel programming constructs used details of the graphics algorithms and how the rendering pipeline and computation interact to achieve the technical goals the focus is on what currently can be done how it is done and future trends topics include examples from game developers using these new capabilities in next generation rendering engines volumetric and hair lighting alternate real time rendering pipelines including ray tracing and micropolygon rendering in frame data structure construction and complex image processing this is an advanced graphics course designed for graduate students interested in pursuing research in real time rendering algorithms graphics systems or parallel programming systems it is open to students who have at least an introductory background in computer graphics and computer systems and architecture two short analysis exploration projects and one large team based final project must be completed prerequisites students should be comfortable with opengl and or direct3d and have had an introductory computer architecture course cs248 or equivalent introduction to compute graphics course syllabus tentative week dates tues thurs 1 mar 29 mar 31 introduction rasterization pipeline 2003 2 apr 5 7 rasterization pipeline 2011 rasterization rendering effects review 3 apr 12 14 overview of a modern graphics core introduction to parallel programming for real time graphics cpu gpu 4 apr 19 21 class cancelled graphics with gpu compute apis 5 apr 26 28 scheduling the graphics pipeline project ideas 6 may 3 5 introduction to opencl opencl examples 7 may 10 12 sw pipelines project proposal presentation review 8 may 17 19 real game engines 1 2 justin hensley oit and dof 9 may 24 26 open questions future of graphics apis and real time graphics 10 may 31 june 2 no class work on projects 11 finals june 6 project presentations hewlett 103 7 10pm projects assignment 1 hello aa assignment 2 heterogeneous load balancing term project proposal due may 12th and we ll discuss in class team project up to 3 readings background material helpful but not required physically based rendering from theory to implementation pharr and humphreys imho anyone doing graphics should own this book real time rendering akenine moller haines and hoffman fundamentals of computer graphics shirley et al computer architecture a quantitative approach hennessy and patterson patterns for parallel programming mattson sanders and massingill material for the course no text book currently exists for this material throughout the quarter we will recommend reading from a combination of recent conference presentations research papers api documentation and books real time graphics architectures beyond programmable shading siggraph 2008 beyond programmable shading siggraph 2009 beyond programmable shading siggraph 2010 cs558 beyond programmable shading university of washington article immutable page info attachments login recentchanges findpage helpcontents search recent toolbox raw text print view render as docbook delete cache check spelling like pages local site map rename page delete page my pages subscribe user remove spam package pages last edited 2011 06 06 15 20 08 by mhouston moinmoin powered python powered valid html 4.01
