raptor what is raptor raptor is a parallel gpu based volume renderer written for use with chromium it can run on both graphics clusters and ssi single system image machines like the sgi onyx4 currently raptor is designed to render 16 bit unsigned short datasets like those produced with ct what can i do with raptor here is an example of a 512x512x1024 ct volume running across 4 nodes of spire and driving a laptop display at 5hz why raptor this parallel volume renderer is named raptor in homage of t rex t rex was one of the first parallel rendering engines for smp graphics systems whereas t rex was a large predator hunting alone velociraptors raptors were much smaller and hunted in packs what are the requirements for raptor besides chromium you will need graphics hardware and drivers that support arb_fragment_program arb_vertex_program and ext_texture3d what shaders does raptor support at the moment the source code provides a simple blinn phong lighting model gradient calculation and 2d transfer function support what parts of chromium does raptor use raptor relies on chromium's sort last compositing spus like the binaryswap spu and the distributed event model crut for interaction for remote image delivery raptor works will with the zpix spu and with the mpeg compression spu work from uva raptor serves as a good example of writing a distributed application using chromium and crut the main source file raptor cpp demonstrates how to transform a simple glut app to use chromium and crut mike houston downloads source raptor version 0.1 3 for chromium 1.8 3 31 2005 chromium config files automatically divide the volume across nodes single remote node two remote nodes four remote nodes documentation readme datasets middle spine 512x512x256 65mb full ct torso 512x512x1536 330mb transfer functions base ct shows bone and vasculature
