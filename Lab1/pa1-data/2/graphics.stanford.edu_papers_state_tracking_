tracking graphics state for networked rendering tracking graphics state for networked rendering ian buck greg humphreys and pat hanrahan stanford university appears in the proceedings of the 2000 eurographics siggraph workshop on graphics hardware abstract as networks get faster it becomes more feasible to render large data sets remotely for example it is useful to run large scientific simulations on remote compute servers but visualize the results of those simulations on one or more local displays the wiregl project at stanford is researching new techniques for rendering over a network for many applications we can render remotely over a gigabit network to a tiled display with little to no performance loss compared to running locally one of the elements of wiregl that makes this performance possible is our ability to track the graphics state of a running application in this paper we will describe our techniques for tracking state as well as efficient algorithms for computing the difference between two graphics contexts this fast differencing operation allows wiregl to transmit less state data over the network by updating server state lazily it also allows our system to context switch between multiple graphics applications several million times per second without flushing the hardware accelerator resulting in substantial performance gains when sharing a remote display between multiple clients paper adobe pdf format 69k compressed postscript 97k greg humphreys
