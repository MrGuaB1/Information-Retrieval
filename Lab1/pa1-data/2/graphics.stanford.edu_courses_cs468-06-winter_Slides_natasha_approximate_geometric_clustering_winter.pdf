on approximate geometric k clustering page 1 on approximate geometric k clustering jiri matousek dcg 2000 page 2 problem given n point set and k 1 find a partition of minimum cost geometric cost function approximately optimal page 3 results 2 clustering n log n approximate algorithm for fixed  0 k clustering can be improved with known lower bound on cluster size page 4 really easy problem given x and cluster centers c 1 c 2 c k find the optimal clustering of x page 5 general approach snap x to a grid cover the space with points potential cluster centers polynomial in n test subsets of size k to find the best centers only test sufficiently different subsets aiming for a near linear algorithm page 6 polynomial grid thm let d and k 0 be fixed suppose there is an algorithm a that for a given  0 k o k 0 and an n point multiset x u rd with points lying on an integer grid of size o n3  finds an 1  approximately optimal k clustering of x then a 1  approximately optimal k 0 clustering for an arbitrary n point subset x u rd can be computed with o n log n preprocessing and with at most c calls to algorithm a with various at most n point sets x with k o k 0 and with  instead of  where  0 and c are constants pf grid size   5n2 diam x n let x be the original and x the snapped set if  is the clustering of x and  is corresponding clustering of x max change in distance to cluster center diam x 2 diam x 2  2 o 5  diam x if cost  1 20 2 since  is 1  approximate for x then corresponding  is 1  approximate for x otherwise apply the algorithm recursively groups of nearby clusters page 7 approximate centroid sets dfn c is an  approximate centroid set for x if it intersects  tolerance ball of every subset of x of size at least s  tolerance ball for s is centered at c s with radius thm let be a finite point set and let ko2 and let c be an  approximate centroid set for s with cluster size os then there are c 1 c 2 c k 2 c st for all k clusterings of with all clusters of size at least s pf by algebra using definition of centroid sets page 8 contruction page 9 subdivide as long as q contains at least s 2d 1 points contruction page 10 contruction closest  larger than diam b b intersects at most 2d cubes some cube has s 2d 1 points page 11 centroid sets thm and the construction can be performed in time pf there are at most different side lengths and each cube contains at least points so there are page 12 well separated pairs dfn x y and x y are  near if and set p is  separated if no two pairs are  near p is  complete for x if for every pair in x there is an  near pair in p k tuples c 1 c 2 c k and c 1 c 2 c k are  near complete separated if all pairs c i c j and c i c j are  near x x y y r r page 13 approximate k clustering thm let c 1 c 2 c k and c 1 c 2 c k be two k tuples in rd that are  near  o 1 9 let  vor c 1 c 2 c k and  vor c 1 c 2 c k then cost  o 1 6 cost  pf c 2 c 2 c 1 c 1   x s 1 s 1 page 14 approximate k clustering instead of looking at all k tuples in c we only need to look at  complete set still too many for near linear algorithm look at  well spread tuples instead ie no subset is 1  isolated yux is 1  isolated if there is x2x y such that that is a distance 1  diam y from y if x is  well spread then diam x o 2  k 1 d r 1  d r x page 15 building cluster centers let c u rd be an m point set then we can compute the set c of k tuples st for any  well spread k tuple in c there is a tuple in c that is  near it c o m k2d each k tuple in c is  2 well spread at least one point in each k tuple in c belongs to c there are no more than o 1 k tuples of c lying near any given k tuple in rd the minimum and maximum distance of points in each k tuple in c are bounded by the constant multiples of minimum and maximum distance in c the running time is o m log m m  k2d page 16 building cluster centers generate a set of  2 complete set of pairs p u c e c there are o m d pairs running time o m log m m d each pair will be a basis for an  2 well spread k tuple x y  page 17 algorithm if k 1 return x for k 2 3 k generate the set c of k tuples for c for each c 1 c 2 c k 2 c let x 1 x 2 x k vor c 1 c 2 c k let c i be the points lying in  neighborhood of c i  is the smallest pairwise distance among c 1 c k for i 1 k call the algorithm recursively on x i and c i vary number of clusters from 1 to kk 1 find the combination k 1 k 2 k k k with the smallest cost for each k tuple in c with all c i non empty output one with smallest cost page 18 c 3 c 4 c 1 c 2 algorithm   x 3 c 3 k 10 k 4 k i 1 2 7 page 19 correctness for any k tuple c 1 c k the algorithm generates a tuple that is  near page 20 running time all range queries are done by approximate range searching in time o log n approximate voronoi partitioning can be done in time o log n  2 d 1 running time page 21
