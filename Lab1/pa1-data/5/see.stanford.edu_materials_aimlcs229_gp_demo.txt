cs 229 autumn 2007 08 gaussian processes demo chuong do this code is known to work properly with octave 2.9 17 gnuplot 2.4 and matlab 7.5 check if running octave v version is_octave v 1 5 define input domain x_min 0 x_step 0.1 x_max 10 x x_min x_step x_max define kernel bandwidth tau 1.0 k x z exp xz xz 2 tau 2 define level of gaussian noise sigma 0.1 while true disp disp cs 229 gaussian processes demo disp disp disp sprintf 1 set kernel bandwidth currently tau f tau disp sprintf 2 set noise level currently sigma f sigma disp 3 show samples from a gaussian process prior disp 4 create a random regression problem disp 5 run gaussian process regression disp 6 add more training data disp disp q quit disp reply lower input select a menu option s switch reply 1 set noise level case 1 tau max 1e 8 input enter desired kernel bandwidth k x z exp xz xz 2 tau 2 2 set noise level case 2 sigma max 1e 8 input enter desired noise level 3 show samples from a gaussian process prior case 3 num_samples 3 h zeros size x 1 num_samples for i 1 num_samples h i sample_gp_prior k x end newplot plot repmat x 1 num_samples h linewidth 3 title sprintf samples from gp with k x z exp xz 2 2 tau 2 tau f tau 4 create a random regression problem case 4 pick true function to be estimated h sample_gp_prior k x y_min min h 1 y_max max h 1 create noise corrupted training set m_train 10 i_train floor rand m_train 1 size x 1 1 x_train x i_train y_train h i_train sigma randn m_train 1 newplot hold on plot x h k linewidth 3 plot x_train y_train rx linewidth 5 axis x_min x_max y_min y_max title sprintf random regression problem with n 0 sigma 2 noise sigma f sigma hold off 5 run gaussian process regression case 5 x_test x k_test_test compute_kernel_matrix k x_test x_test k_test_train compute_kernel_matrix k x_test x_train k_train_train compute_kernel_matrix k x_train x_train g k_train_train sigma 2 eye size x_train 1 mu_test k_test_train g y_train sigma_test k_test_test sigma 2 eye size x_test 1 k_test_train g k_test_train stdev_test sqrt diag sigma_test newplot hold on if is_octave errorbar x_test mu_test stdev_test else lower_test mu_test 2 stdev_test upper_test mu_test 2 stdev_test region_x x_test x_test end 1 1 region_y lower_test upper_test end 1 1 fill region_x region_y g end plot x h k linewidth 3 plot x_train y_train rx linewidth 5 plot x_test mu_test b linewidth 3 axis x_min x_max y_min y_max title gaussian process regression 95 confidence region hold off 6 add more training data case 6 add more noise corrupted points to training set m_train size x_train 1 i_train floor rand m_train 1 size x 1 1 x_train x_train x i_train y_train y_train h i_train sigma randn m_train 1 newplot hold on plot x h k linewidth 3 plot x_train y_train rx linewidth 5 axis x_min x_max y_min y_max title random regression problem hold off q quit case q break end end
