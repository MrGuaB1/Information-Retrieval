ee 261 the fourier transform and its applications fall 2007 problem set seven due wednesday november 14 page 1 ee 261 the fourier transform and its applications fall 2007 problem set seven due wednesday november 14 1 15 points dft basics a prove the shift theorem for the discrete fourier transform f pf  pff where pf n f n p b replication suppose that the signal f f 0 f 1 f n 1 has discrete fourier transform f we create a new signal g n n 0 1 2n 1 with twice the number of points defined by g n f n n 0 1 n 1 f n n n n n 1 2n 1 find the dft of g in terms of f c zero padding consider a vector of n samples x x 0 x 1 x n 1 we augment this vector by appending m zeros to the end of it to form a new signal x of length n m express x f x and x fx in terms of samples of a continuous fourier transform and compare the two why might we want to zero pad 2 10 points what is 1 f what is 1 1 1 a where a a a a 3 10 points upsampling and downsampling again suppose that the signal f of size n has discrete fourier transform f a upsampling we create a new signal h of size 2n n 0 1 2n 1 with twice the number of points by inserting 0's among the values f n ie h n f n 2 n even 0 n odd find the dft of h in terms of f b downsampling we create another new signal g with half the number of points n 1 n 2 1 assume that n is even by keeping only the values of f n at even indices ie g n f 2n find the dft of g in terms of f 1 page 2 4 15 points handel's hallelujah in this problem we will explore the effects of sampling with or without anti aliasing filters as we saw in lecture there is a significant distortion of music due to aliasing if we sample slower than twice the highest frequency component however if we can suppress the high frequency components before sampling we can possibly avoid distortion due to aliasing in this problem we will use an anti aliasing filter h s whose fourier transform is shown below h s is available on the class web site in the matlab file anti aliasing mat which contains h s in the vector hs 4000 3000 2000 1000 0 1000 2000 3000 4000 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 s hz h s figure 1 anti aliasing filter built into matlab is a snippet of handel's hallelujah chorus you load it into the workspace by typing load handel this loads two variables into the workspace y that contains about 8 seconds of handel's hallelujah chorus and fs which is the sampling frequency used finally here is the problem resample the snippet of handel's hallelujah chorus down to a sampling frequency of fs 4096hz that should be half of the original sampling frequency now apply the anti aliasing filter to handel's hallelujah chorus so that you cut off all fre quencies higher than 2048hz and then resample down to fs 4096hz is there any audible difference between the two versions why or why not turn in your commented matlab code along with a short discussion 2 paragraphs of any audible difference you heard or did not hear hints to resample at half the sampling rate you can use xhalf x 1 2 length x 2 http coursedocs stanford edu materials lsoftaee261 anti aliasing http see stanford edu materials lsoftaee261 anti aliasing mat page 3 remember to adjust the sampling rate correctly when you use sound or wavwrite recall that you can use fft to take the fourier transform and ifft to take the inverse fourier transform hs has been arranged in the same way matlab's fft returns fourier transforms to evaluate h s x s try using the operator 3
