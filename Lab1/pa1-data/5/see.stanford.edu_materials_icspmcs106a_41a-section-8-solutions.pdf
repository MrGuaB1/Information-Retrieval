eric roberts page 1 mehran sahami handout 41a cs 106a november 28 2007 solution to section 8 parts of this handout by brandon burr and patrick young flightplanner java reads in a file of cities and their corresponding flights and allows the user to plan a flight route import acm program import acm util import java io import java util public class flightplanner extends consoleprogram runs the program public void run println welcome to flight planner readflightdata flights txt println here's a list of all the cities in our database printcitylist cities println let's plan a round trip route string startcity readline enter the starting city arraylist string route new arraylist string route add startcity string currentcity startcity while true string nextcity getnextcity currentcity route add nextcity if nextcity equals startcity break currentcity nextcity printroute route ask user for the name of the next city in the route private string getnextcity string city arraylist string destinations getdestinations city string nextcity null while true println from city you can fly directly to printcitylist destinations string prompt where do you want to go from city nextcity readline prompt if destinations contains nextcity break println you can t get to that city by a direct flight return nextcity page 2 2 given a starting city looks up the destinations from that city in the hashmap of flights and return an array list of the destinations that are available private arraylist string getdestinations string fromcity return flights get fromcity prints a list of cities from the array list each city name is indented by a space private void printcitylist arraylist string citylist for int i 0 i citylist size i++ string city citylist get i println city given a list of city names prints out the flight route with a between each pair of cities private void printroute arraylist string route println the route you ve chosen is for int i 0 i route size i++ if i 0 print print route get i println reads in the city information from the given file storing the information in both the arraylist of cities and the hashmap of flights private void readflightdata string filename flights new hashmap string arraylist string cities new arraylist string try bufferedreader rd new bufferedreader new filereader filename while true string line rd readline if line null break if line length 0 readflightentry line rd close catch ioexception ex throw new errorexception ex page 3 3 reads a single flight entry from the line passed as an argument which should be in the form fromcity tocity each new city is added to the arraylist cities and each new flight is recorded by adding a new destination city to the arraylist stored in the hashmap flights under the key for the starting city private void readflightentry string line int arrow line indexof if arrow 1 throw new errorexception illegal flight entry line string fromcity line substring 0 arrow trim string tocity line substring arrow 2 trim definecity fromcity definecity tocity getdestinations fromcity add tocity defines a city if it has not already been defined defining a city consists of entering it in the cities array and entering an empty arraylist in the flights table to show that it has no destinations yet private void definecity string cityname if cities contains cityname cities add cityname flights put cityname new arraylist string private instance variables private hashmap string arraylist string flights private arraylist string cities
