stanford digital repository stanford digital repository axe an automated formal equivalence checking tool for programs creator smith eric whitman contributor s dill david primary advisor engler dawson r advisor mitchell john advisor stanford university computer science dept description this dissertation describes axe an automated formal verification tool for proving equivalence of programs axe has been used to verify real world java implementations of cryptographic operations including block ciphers stream ciphers and cryptographic hash functions axe proves the bit for bit equivalence of the outputs of two programs one of which may be a formal mathematical specification to do so axe relies on a novel combination of techniques from combinational equivalence checking and inductive theorem proving first the loops in some programs can be completely unrolled creating large loop free terms axe proves the equivalence of such terms using a phased approach including aggressive word level simplifications bit blasting test case based identification of internal equivalences and sweeping and merging for loops that cannot be unrolled axe uses execution traces to detect loop properties including loop invariants for single loops and connection relationships between corresponding loops axe proves such properties inductively in many cases synchronizing transformations must be performed to align the loop structures of the programs being compared axe can perform and verify a variety of these transformations eric whitman smith submitted to the department of computer science thesis ph d stanford university 2011 view in searchworks 2011 by eric whitman smith no creative commons cc license file download description access eric smith dissertation augmented pdf body of dissertation stanford only until 2013 06 02 stanford university stanford california 94305 650 725 1064 terms of use copyright complaints
