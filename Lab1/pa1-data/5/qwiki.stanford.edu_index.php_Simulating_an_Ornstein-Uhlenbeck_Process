simulating an ornstein uhlenbeck process qwiki simulating an ornstein uhlenbeck process from qwiki jump to navigation search simulating a one dimensional ornstein uhlenbeck process in matlab is quick and easy at first glance it appears that one needs to calculate the updates in a for loop since there's an x t on the right hand side of the differential update rule we can get around this problem with matlab s wonderful filter function given a vector t of times linearly spaced at intervals dt with g and d your damping parameter and diffusion coefficient respectively then the following lines of code will simulate the ornstein uhlenbeck process x_free cumsum sqrt 2 d dt randn size t x_filt filter 0 g dt 1 1 g dt x_free x_ou x_free x_filt x_ou is a realization of the ornstein uhlenbeck process sampled at the times in t the simulation is exact because a realization of an ornstein uhlenbeck process is equal to a realization of free diffusion minus a low pass filtered copy of the same realization it is easy to see why this trick works let x free be free diffusion and x filt be a low pass filtration of x free then now let to find a graphical illustration of these concepts is shown below retrieved from http qwiki stanford edu index php simulating_an_ornstein uhlenbeck_process categories mathematics probability lab lore numerical recipes views page discussion view source history personal tools log in create account navigation main page browse categories recent changes random page community portal help faq sign up search toolbox what links here related changes special pages printable version permanent link powered by mediawiki gnu free documentation license 1.2 this page was last modified on 14 august 2005 at 23 11 this page has been accessed 17803 times content is available under gnu free documentation license 1.2 privacy policy about qwiki disclaimers
