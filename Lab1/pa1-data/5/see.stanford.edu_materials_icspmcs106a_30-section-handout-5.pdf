section handout 5 files arrays and arraylists page 1 mehran sahami handout 30 cs 106a october 29 2007 section handout 5 files arrays and arraylists portions of this handout by eric roberts 1 word count write a program wordcount that reads a file and reports how many lines words and characters appear in it suppose for example that the file lear txt contains the following passage from shakespeare's king lear poor naked wretches wheresoe er you are that bide the pelting of this pitiless storm how shall your houseless heads and unfed sides your loop d and window d raggedness defend you from seasons such as these o i have ta en too little care of this given this file your program should be able to generate the following sample run for the purposes of this program a word consists of a consecutive sequence of letters and or digits which you can test using the static method character isletterordigit also you should not count the characters that mark the end of a line which will have different values depending on the type of computer page 2 2 histograms write a program that reads a list of exam scores from the file midtermscores txt which contains one score per line and then displays a histogram of those numbers divided into the ranges 0 9 10 19 20 29 and so forth up to the range containing only the value 100 if for example midtermscores txt contains the data shown in the right margin your program should then be able to generate a histogram that looks as much as possible like the following sample run midtermscores txt 73 58 73 93 82 62 80 53 93 52 92 75 65 95 23 100 75 38 80 77 92 60 98 95 62 87 97 73 78 72 55 58 42 31 78 70 78 74 70 60 72 75 84 87 62 17 92 78 74 65 90 page 3 3 unique names write a program that asks the user for a list of names one per line until the user enters a blank line ie just hits return when asked for a name at that point the program should print out the list of names entered where each name is listed only once ie uniquely no matter how many times the user entered the name in the program you may find that using an arraylist to keep track of the names entered by user may greatly simplify this problem a sample run of this program is shown below
