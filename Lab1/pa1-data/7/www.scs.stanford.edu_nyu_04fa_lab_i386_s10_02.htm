80386 programmer's reference manual section 10.2 up chapter 10 initialization prev 10.1 processor state after reset next 10.3 switching to protected mode 10.2 software initialization for real address mode in real address mode a few structures must be initialized before a program can take advantage of all the features available in this mode 10.2 1 stack no instructions that use the stack can be used until the stack segment register ss has been loaded ss must point to an area in ram 10.2 2 interrupt table the initial state of the 80386 leaves interrupts disabled however the processor will still attempt to access the interrupt table if an exception or nonmaskable interrupt nmi occurs initialization software should take one of the following actions change the limit value in the idtr to zero this will cause a shutdown if an exception or nonmaskable interrupt occurs refer to the 80386 hardware reference manual to see how shutdown is signalled externally put pointers to valid interrupt handlers in all positions of the interrupt table that might be used by exceptions or interrupts change the idtr to point to a valid interrupt table 10.2 3 first instructions after reset address lines a 31 20 are automatically asserted for instruction fetches this fact together with the initial values of cs ip causes instruction execution to begin at physical address fffffff0h near intrasegment forms of control transfer instructions may be used to pass control to other addresses in the upper 64k bytes of the address space the first far intersegment jmp or call instruction causes a 31 20 to drop low and the 80386 continues executing instructions in the lower one megabyte of physical memory this automatic assertion of address lines a 31 20 allows systems designers to use a rom at the high end of the address space to initialize the system up chapter 10 initialization prev 10.1 processor state after reset next 10.3 switching to protected mode
