linux include asm i386 nmi h ifndef asm_nmi_h define asm_nmi_h include linux pm h include asm io h do_nmi_callback check to see if a callback exists and execute it return 1 if the handler exists and was handled successfully int do_nmi_callback struct pt_regs regs int cpu ifdef config_pm replace the pm callback routine for nmi struct pm_dev set_nmi_pm_callback pm_callback callback unset the pm callback routine back to the default void unset_nmi_pm_callback struct pm_dev dev else static inline struct pm_dev set_nmi_pm_callback pm_callback callback return 0 static inline void unset_nmi_pm_callback struct pm_dev dev endif config_pm extern void default_do_nmi struct pt_regs extern void die_nmi char str struct pt_regs regs int do_panic define get_nmi_reason inb 0x61 extern int panic_on_timeout extern int unknown_nmi_panic extern int nmi_watchdog_enabled extern int check_nmi_watchdog void extern int avail_to_resrv_perfctr_nmi_bit unsigned int extern int avail_to_resrv_perfctr_nmi unsigned int extern int reserve_perfctr_nmi unsigned int extern void release_perfctr_nmi unsigned int extern int reserve_evntsel_nmi unsigned int extern void release_evntsel_nmi unsigned int extern void setup_apic_nmi_watchdog void extern void stop_apic_nmi_watchdog void extern void disable_timer_nmi_watchdog void extern void enable_timer_nmi_watchdog void extern int nmi_watchdog_tick struct pt_regs regs unsigned reason extern void nmi_watchdog_default void extern int setup_nmi_watchdog char extern atomic_t nmi_active extern unsigned int nmi_watchdog define nmi_default 1 define nmi_none 0 define nmi_io_apic 1 define nmi_local_apic 2 define nmi_invalid 3 struct ctl_table struct file extern int proc_nmi_enabled struct ctl_table int struct file void __user size_t loff_t extern int unknown_nmi_panic void __trigger_all_cpu_backtrace void define trigger_all_cpu_backtrace __trigger_all_cpu_backtrace endif asm_nmi_h
