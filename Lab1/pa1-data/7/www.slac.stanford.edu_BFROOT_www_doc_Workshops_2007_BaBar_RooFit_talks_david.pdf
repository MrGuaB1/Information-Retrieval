david kirkby uc irvine mini workshop on roofit at babar 6 dec 2007 page 1 towards a simpler interaction with roofit david kirkby uc irvine mini workshop on roofit at babar 6 dec 2007 page 2 define variables build pdfs load datasets run toy studies run fits prepare plots anatomy of a fit page 3 anatomy of a fit eg sin2beta cpt fit to golden ccs modes http www slac stanford edu bfroot www physics analysis awg tdbc sin2b roofitbabar html 5k lines of dense c++ roobcptfitmaster configuration & steering roobcptfit create full pdf roobcptgendecay create signal pdf page 4 goals in an ideal world how would we specify a realistic complex fit work as close as possible to problem domain what type of improvements should we consider syntax & idiom design patterns resource management page 5 tradeoffs econom y clarity generality c++ goal page 6 syntax & idiom idiom low level conventions eg while a++ b++ copy b into a some obvious candidates for improving economy and clarity eg roorealvar deltatmax new roorealvar deltatmax deltatmax 20 deltatmax realvar value 20 page 7 syntax & idiom roocategory brecmode new roocategory brecmode decay mode of reco b brecmode definetype b0tojpsiks_jpsitoee 1011 brecmode definetype b0tojpsiks_jpsitomumu 1012 brecmode definetype b0tojpsiks2pi0_jpsitoee 1013 brecmode category title decay mode of reco b first 1011 b0tojpsiks_jpsitoee b0tojpsiks_jpsitomumu b0tojpsiks2pi0_jpsitoee page 8 design patterns need economical and clear patterns for frequently performed activities eg replicate pdfs based on discrete categories systematics estimated by parameter variation superimposed projection plots by category top level fit configuration & steering will generally require corresponding roofit classes roosimpdfbuilder roomcstudy page 9 resource management resource management is not part of the problem domain c++ resource management operates at a relatively low level and offers high performance eliminate explicit memory management higher level file management configuration file framework page 10 implementation still at the early planning stages collect input develop requirements too early to make implementation choices for concreteness some options to eventually consider scripting languages python tcl custom parser structured files xml root page 11 prototyping it would be useful to have a working prototype on the timescale of the feb analysis school any implementation should be able to directly call roofit libraries or else generate valid c++
