memory array page 1 tile block diagram loadstoreunit pclock1 pclock0 processor tilecrossbar memorymatarray quadinterface configinterface 16 1 stats processor proc clk gen description two processors share access to the memorymatarray the processor clocks are gated version of the system clock next section the loadstoreunit arbitrates between the processors and also manages the processor accesses for eg address mapping stall generation etc page 2 the quadinterface enables the tile to interact with other tiles tilecrossbar arbitrates accesses to the memorymatarray configinterface enables configuration and access of debug stats from all the modules in the tile stats module keeps stats of interesting events in the tile tile pipeline and timing diagram the following figure shows the pipeline structure within the tile there are two pipe stages to match the processor latency requirements processor pipeline figure tile pipeline structure loadstore logic xbar and interconnect memorymat xbar and interconnect loadstore logic the first pipe stage feeds the address request from processor through the load store unit and cross bar into the memory mat the second pipe stage includes the actual memory mat access mat processing and communication back to the processor the timing diagram for the various operations is shown below load hit page 3 clock procclock procaddrout procreaden memmatin procdatain figure load hit timing load miss clock procclock procaddrout procreaden procdatain figure load miss timing stall page 4 clocking the main considerations are match processor clock tree delay with that of tile clock tree keep the clock tree delay within a tile 12 clock cycle allow for clock bypassing during scan test mode testmode stall clocksource processor clock tree tile clock tree delay 12 clock cycle delay match with tile clock tree processor rest of tile logic 1 b1 figure clock tree structure within a tile
