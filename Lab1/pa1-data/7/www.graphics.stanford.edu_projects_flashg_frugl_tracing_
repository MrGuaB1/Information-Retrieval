frugl tracing frugl tracing in order to facilitate the storage and analysis of graphics scene data we have implemented an api which allows us to trace and replay frugl calls our tracing api fgls defines both a stream format for encoding frugl calls and a number of functions for manipulating frugl streams including functions for creating capturing reading writing and replaying frugl streams fgls is heavily based on gls the opengl stream codec this makes it fairly straightforward to convert a gls stream into an fgls stream opening up the possibility of obtaining fgls streams from opengl applications through the use of gls tracing tools fgls streams based on opengl applications can be used to provide realistic input to the argus rendering library in addition such streams can also be used in quantitative studies of various aspects of the graphics pipeline the core of the fgls api is contained in the following functions fglsbegincapture create an fgls stream and start capturing frugl commands into it fglsendcapture stop capturing frugl commands fglsread read an fgls stream from a file fglswrite write an fgls stream to a file fglsdestroy destroy an fgls stream fglscallstream execute the commands stored in an fgls stream fglscommandfunc establish a callback for a frugl command to be called when that command is executed during an fglscallstream these functions are sufficient for most stream manipulation needs the primary developers of the frugl stream library are ziyad hakura and kekoa proudfoot with professor pat hanrahan update our frugl tracing tools have been replaced by a set of opengl tracing tools described briefly here kekoa graphics stanford edu
