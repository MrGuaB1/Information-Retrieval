stanford tmt example 7 training a plda model http nlp stanford edu software tmt 0.4 tells scala where to find the tmt classes import scalanlp io _ import scalanlp stage _ import scalanlp stage text _ import scalanlp text tokenize _ import scalanlp pipes pipes global _ import edu stanford nlp tmt stage _ import edu stanford nlp tmt model lda _ import edu stanford nlp tmt model llda _ import edu stanford nlp tmt model plda _ val source csvfile pubmed oa subset csv idcolumn 1 val tokenizer simpleenglishtokenizer tokenize on space and punctuation casefolder lowercase everything wordsandnumbersonlyfilter ignore non words and non numbers minimumlengthfilter 3 take terms with 3 characters val text source read from the source file column 4 select column containing text tokenizewith tokenizer tokenize with tokenizer above termcounter collect counts needed below termminimumdocumentcountfilter 4 filter terms in 4 docs termdynamicstoplistfilter 30 filter out 30 most common terms documentminimumlengthfilter 5 take only docs with 5 terms define fields from the dataset we are going to slice against val labels source read from the source file column 2 take column two the year tokenizewith whitespacetokenizer turns label field into an array termcounter collect label counts termminimumdocumentcountfilter 10 filter labels in 10 docs val dataset labeledldadataset text labels define the model parameters val numbackgroundtopics 1 val numtopicsperlabel sharedktopicsperlabel 4 or could specify the number of topics per label based on the values in a two column csv file containing label name and number of topics val numtopicsperlabel customktopicsperlabel csvfile topics per label csv read iterator string int tomap val modelparams pldamodelparams dataset numbackgroundtopics numtopicsperlabel termsmoothing 0.01 topicsmoothing 0.01 name of the output model folder to generate val modelpath file plda cvb0 dataset signature+ modelparams signature trains the model writing to the given output path traincvb0plda modelparams dataset output modelpath maxiterations 1000
