stanford ppl stanford ppl homepage people members publications projects news contact login delite a compiler and runtime infrastructure for building new performance oriented dsls read more liszt a dsl for solving mesh based pdes read more research spotlight the following papers were presented at supercomputing 2011 supercomputing 2011 seattle washington usa november 12 18 2011 cudadma optimizing gpu memory bandwidth via warp specialization michael bauer henry cook and brucek khailany as the computational power of gpus continues to scale with moore's law an increasing number of applications are becoming limited by memory bandwidth we propose an approach for programming gpus with tightly coupled specialized dma warps for performing memory transfers between on chip and off chip memories separate dma warps improve memory bandwidth utilization by better exploiting available memory level parallelism and by leveraging efficient inter warp producer consumer synchronization mechanisms dma warps also improve programmer productivity by decoupling the need for thread array shapes to match data layout to illustrate the benefits of this approach we present an extensible api cudadma that encapsulates synchronization and common sequential and strided data transfer patterns using cudadma we demonstrate speedup of up to 1.37 x on representative synthetic microbenchmarks and 1.15 x 3.2 x on several kernels from scientific applications written in cuda running on nvidia fermi gpus paper pdf slides liszt a domain specific language for building portable mesh based pde solvers zachary devito niels joubert francisco palacios stephen oakley montserrat medina mike barrientos erich elsen frank ham alex aiken karthik duraisamy eric darve juan alonso pat hanrahan heterogeneous computers with processors and accelerators are becoming widespread in scientific computing however it is dificult to program hybrid architectures and there is no commonly accepted programming model ideally applications should be written in a way that is portable to many platforms but providing this portability for general programs is a hard problem by restricting the class of programs considered we can make this portability feasible we present liszt a domain specific language for constructing mesh based pde solvers we introduce language statements for interacting with an unstructured mesh and storing data at its elements program analysis of these statements enables our compiler to expose the parallelism locality and synchronization of liszt programs using this analysis we generate applications for multiple platforms a cluster an smp and a gpu this approach allows liszt applications to perform within 12 of hand written c++ scale to large clusters and experience order of magnitude speedups on gpus paper pdf slides who we are the stanford pervasive parallelism lab is a collaboration of many leading stanford computer scientists and electrical engineers for the purpose of developing the parallel computing platform for the year 2020 we are supported by a completely open industrial affiliates program why we exist new heterogeneous architectures continue to provide increases in achievable performance but programming these devices to reach maximum performance levels is not straightforward the goal of the ppl is to make heterogeneous parallelism accessible to average software developers through domain specific languages dsls so that it can be freely used in all computationally demanding applications what we do the core of our research agenda is to allow the domain expert to develop parallel software without becoming an expert in parallel programming our approach is to use a layered system based on dsls a common parallel compiler and runtime infrastructure and an underlying architecture that provides efficient mechanisms for communication synchronization and performance monitoring read more member companies oracle nvidia amd ibm intel hp nec copyright 2011 all rights reserved stanford university
