this paper describes an automatic method for proving equivalence of implementations of block ciphers and similar cryptographic algorithms the method can compare two object code implementations or compare object code to a formal mathematical specification in either case it proves that the computations being compared are bit for bit equivalent the method has two steps first the computations are represented as large mathematical terms then the two terms are proved equivalent using a phased approach that includes domain specific optimizations for block ciphers and relies on a careful choice of both word level and bit level simplifications the verification also relies on stp 5 a sat based decision procedure for bit vectors and arrays the method has been applied to verify real widely used java code from sun microsystems and the open source bouncy castle project it has been applied to implementations of the block ciphers aes des triple des 3des blowfish rc2 rc6 and skipjack as well as applications of the cryptographic hash functions sha 1 and md5 on fixed length messages
