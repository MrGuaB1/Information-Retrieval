pwdhash stronger password authentication using browser extensions blake ross collin jackson nick miyake dan boneh john mitchell stanford university http crypto stanford edu pwdhash 2 password phishing problem bank a fake site user cannot reliably identify fake sites captured password can be used at target site pwd a pwd a 3 common password problem bank a vulnerable site high security site pwd a pwd b pwd a phishing attack or break in at site b reveals pwd at a server side solutions will not keep pwd safe solution strengthen with client side support site b 4 our solution pwdhash lightweight browser extension impedes password theft invisible to server invisible to user pwd prefix pwd hashing 5 password hashing bank a hash pwd b siteb hash pwd a banka site b generate a unique password per site hmac fido 123 banka com q7a 0ekexb hmac fido 123 siteb com ozx2 iciqc pwd a pwd b 6 password hashing past attempts hash pwd with realm provided by remote site http 1.1 digest authentication kerberos 5 does not prevent phishing common pwd hash pwd with network service name abadi bharat marais pto 97 standalone gabber gibbons mattias mayer fc 97 proxy relies on intercepting traffic can t handle https 7 password hashing a popular idea recent password hashing projects similar hashing algorithms only pwdhash defends against spoofing and is invisible to the user site password password maker genpass passwdlet password composer magic password generator pwdhash password generator extension 8 the spoofing problem javascript can display password fields or dialogs unhashed password sent to attacker in clear 9 password prefix original pwd should never be visible to web page ozx2 iciqc site b fido 123 fido 123 abcdefgh 10 password prefix how it works normal operation prefix in password field abnormal operation prefix in non password field can just ignore the prefix and not hash remind user not to enter password fido 123 abcdefgh abcdefgh fido 123 hmac fido 123 siteb com q7a 0ekexb 11 why use password prefix protection mechanism built in to password does not rely on user to make a decision same prefix works for everyone distinguishes secure passwords from normal passwords social security numbers pins only use it when you want to 12 other trusted pwd interfaces password prefix secure attention sequence trusted image or phrase passmark dss starts with 13 other challenges password reset internet cafes dictionary attacks spyware dns poisoning no protection other issues described in the paper choosing salt for hash encoding hashed password additional attacks and defenses 14 after install pwdhash can t protect existing pwds only passwords starting with are secure user can choose where to use pwdhash user must enter old password unhashed into password reset page pwd prefix makes it easy old passwords won t be accidentally hashed new secure passwords are automatically hashed password reset starts with 15 internet cafes users cannot install software at internet cafes would not be a problem if pwdhash were universally available interim solution a secure web site for remote hashing eg https www pwdhash com hash is computed using javascript server never sees password resulting hash is copied into clipboard can also be used as a standalone password generator internet explorer firefox 16 dictionary attacks after phishing attack or break in to low security site attacker can repeatedly guess password and check hash succeeds on 15 of passwords unlike 100 today less effective on longer stronger passwords solution better authentication protocol speke srp etc requires server side changes defense user specifies a global pwd to strengthen all pwd hashes creates a new pwd management problem for shared machines defense slow hash function halderman waters felten 05 increases time of dictionary attack aardvark aback abacus abandon 17 pwdhash try it out prototype for internet explorer and mozilla firefox defends against spoofing invisible to user invisible to server complementary to other anti phishing solutions only use it when you want to www pwdhash com
