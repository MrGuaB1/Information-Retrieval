stp is a decision procedure for the satisfiability of quantifier free formulas in the theory of bit vectors and arrays that has been optimized for large problems encountered in software analysis applications the basic architecture of the procedure consists of word level pre processing algorithms followed by translation to sat the primary bottlenecks in software verification and bug finding applications are large arrays and linear bit vector arithmetic new algorithms based on the abstraction refinement paradigm are presented for reasoning about large arrays a solver for bit vector linear arithmetic is presented that eliminates variables and parts of variables to enable other transformations and reduce the size of the problem that is eventually received by the sat solver these and other algorithms have been implemented in stp which has been heavily tested over thousands of examples obtained from several real world applications experimental results indicate that the above mix of algorithms along with the overall architecture is far more effective for a variety of applications than a direct translation of the original formula to sat or other comparable decision procedures
