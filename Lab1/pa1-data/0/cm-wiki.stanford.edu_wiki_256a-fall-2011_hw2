256a fall 2011 hw2 ccrma wiki 256a fall 2011 hw2 from ccrma wiki jump to navigation search contents 1 homework 2 delay feedback moving average and polyphony 1.1 specification part 1 of 3 delay feedback moving average 1.2 specification part 2 of 3 polyphony 1.3 specification part 3 of 3 sonic musical statement 1.4 note 1.5 possible classes 1.6 deliverables homework 2 delay feedback moving average and polyphony due date 2011.10 18 11 59 59pm or thereabout tuesday image delayed png specification part 1 of 3 delay feedback moving average create a program that is capable of real time audio input output suggestion use the skeleton framework from hw1 craft the framework for a delay by implementing a circular buffer think about how to implement a delay element that delays the input signal by some integer number of samples think about how to implement this efficiently without shifting all the elements for each sample an array of samples two pointers one for reading and another for writing initialize them advance the pointers accordingly writing and reading into the corresponding locations via the pointers test with with the microphone with varying delay lengths now add feedback with some attenuation factor 1 take each output sample of the delay multiply it by attenuation factor 1 and add it into the input test with the microphone with varying delay lengths next modify the feedback by adding a 2 point moving average filter into the feedback loop simply average the current output sample with the previous output sample final test on demand eg via console input load the array with white noise and let it run specification part 2 of 3 polyphony abstract the above into something you can reuse design an interface for straightforward control add rtmidi support with polyphony so we can play our construction above note if you do not have a midi keyboard you can download a virtual midi keyboard to trigger your synthesis osx such as midi keys linux run vkeybd & in the terminal open a keyboard open qjackctl in terminal click connect go to the alsa patch screen and connect the virtual keyboard to your rtmidi application windows you can install vmpk specification part 3 of 3 sonic musical statement use the framework above algorithmically generate and or play a sonic musical statement record it turn it in note have fun with it your code should compile and run on the ccrma machines comment your code and have consistent style you are welcome to work together but you must do turn in your own work you ll likely get more out of it this way some considerations possible classes delayline a class to represent the audio delay line moving average in office hours i called it a onezero filter a class to represent the moving average filter needed for the karplus strong algorithm the one zero is a signal processing reference to one root in the numerator in of a difference equation not important for this but i wanted to stay consistent from the office hours the one zero class should simply implement something like y n 5 x n x n 1 karplussynth a class to hold both the delay line and one zero filter this should be the main synthesis object that wires up the onezero and delayline objects you ll have a limited number of these say 16 of them to do polyphony midievent a class to represent the concept of the midi note velocity and pitch midieventq some data structure to store the incoming midievents and drain them when needed produced in the midi callback and consumed in the audio callback deliverables turn in all files by putting them in your library web 256 hw2 directory and concise online documentation readme 1 source code to the project in a single zip file h cpp c makefile etc it must compile on the ccrma linux machines 2 online page for your project should be viewable at http ccrma stanford edu yourid 256 hw2 it should include links to your files of various kinds instructions on building the project for example anyone in the class should be able to download a short readme text section that conveys your ideas comments in constructing each program describes any difficulties you encountered in the process lists any collaborators 3 submit via coursework retrieved from https ccrma stanford edu wiki 256a fall 2011 hw2 views page discussion view source history personal tools log in navigation special categories ccrma web site community portal current events recent changes random page help search toolbox what links here related changes special pages printable version permanent link powered by mediawiki this page was last modified on 19 october 2011 at 14 37 this page has been accessed 470 times privacy policy about ccrma wiki disclaimers
