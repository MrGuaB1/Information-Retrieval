wsq web supported database queries wsq web supported database queries roy goldman jennifer widom run the demo wsq pronounced wisk is a new approach for combining the strengths of existing web search engines and rdbms technology with wsq we can enhance sql queries over a local relational database with relevant searches over google altavista or any other search engine our online demo allows users to ask a set of restricted yet interesting wsq queries users can rank tuples in local databases based on how often they appear on the web and optionally users can rank the tuples based on how often they appear along with arbitrary search terms in this demo all searches are issued to altavista as a simple example we can rank the acm sigs by how often they appear on the web near knuth rank field select acm sigs near field type knuth click search the web now for each acm sig wsq will issue a search to altavista to count how often that sig appears on the web near knuth the results will look something like this 1 sigact 8 2 sigplan 7 3 siggraph 3 4 sigmod 2 5 sigcomm 1 6 sigsam 1 for each sig the red number reflects the total number of web pages for each sig as given by altavista you can click on each sig in the results to see the actual urls supplied by altavista for that sig you can try the demo now try out some sample queries or read ahead for more detailed instructions rank select one of several small local database tables in the rank field choices include us states european countries and acm special interest groups sigs click the preview local database button to examine the contents of each table without yet consulting the web the identifier column is the primary text string assumed to identify the tuple on the web optionally the secondary identifiers column is an additional disjunctive search expression that is useful for identifying the tuple for example among the stanford dbgroup members jeff ullman is the primary identifier and jeffrey ullman or jeffrey d ullman or jeff d ullman is the expression that constitutes the secondary identifiers near optionally specify in the near field keywords to be searched for along with each tuple in the local database suppose you select the acm sigs as the local database if you supply knuth in the near field then you re creating a query to rank the acm sigs by how often each sig appears on the web near knuth if you leave the near field empty then you re creating a query to measure the pure popularity of each sig on the web independent of context if the near field is not empty two additional options are available correlation correlation between each tuple and the near expression can be tight or loose under tight correlation the near expression must appear on the web in close textual proximity to each tuple identifier implemented by using the altavista near operator in the search if correlation is loose we only require that the near expression and the tuple identifier appear anywhere together on the same web page implemented by using the altavista and operator in the search rankings rankings can be absolute or normalized with absolute rankings tuples will be ranked simply by the number of times they appear on the web together with the near expression with normalized rankings the number of web hits for the expression is normalized by the number of times the tuple appears on the web without the near expression the motivation for this approach is best understood by considering the us states ranking these states by their popularity on the web without a near expression shows that some states such as california texas and new york appear far more often than others now suppose we want to rank each state by how often it appears on the web near the keyword crime with absolute rankings the most popular states will rank highly again since there are just so many more web pages for those states but we may really be interested in the relative importance of crime to each state that is how often the word crime appears near a state relative to the total number of times the state is mentioned note that our normalization algorithm currently has its own limitations it tends to quickly disqualify the most popular states from any search search the web click search the web to issue your wsq query wsq is described in more detail in wsq dsq a practical approach for combined querying of databases and the web postscript acrobat this paper will appear in proceedings of the acm sigmod international conference on management of data in may 2000 other questions or comments please contact roy goldman royg cs stanford edu run the demo
