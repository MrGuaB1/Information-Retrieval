chaims software composition at stanford logo chaims compiling high level access interfaces for multi site software towards the science of component engineering new to chaims read the project objectives also check out the introduction to chaims in powerpoint or html go the overview page or view an animation of a chaims program in action requires flash research information overview of chaims the chaims research project basics description documentation and examples continuation of the chaims research xml new architecture optimization description documentation and examples chaims publications chaims presentations talks slides and demos administrative members funding minutes schedules and notes for chaims members only chaims objectives the chaims effort will develop a very high level mega programming language for software module composition its compiler is to generate a variety of invocation sequences for current and developing standards for software interoperation with a focus on multi computer distributed operation the language will include the ability to set up module interfaces prior to executions request performance estimates from modules prior to their invocation schedule modules in parallel monitor execution of invoked modules interrupt inadequately performing modules and provide data and meta information to customer interface modules wiederhold wegner ceri towards megaprogramming cacm june 1992 chaims supports a paradigm shift which is already occurring a move from coding as the focus of programming to a focus on composition this shift is occurring invisibly to many enterprises since there is no clear boundary in moving from subroutine usage to remote service invocation there are hence few tools and inadequate education to deal with this change questions send email to neal sample or to any member of the chaims project stanford university computer science department database group
