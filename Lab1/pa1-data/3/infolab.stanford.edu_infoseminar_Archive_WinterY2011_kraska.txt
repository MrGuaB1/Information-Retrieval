crowddb answering queries with crowdsourcing tim kraska uc berkeley some queries cannot be answered by machines only processing such queries requires human input eg for providing information that is missing from the database for performing computationally difficult functions and for matching ranking or aggregating results based on fuzzy criteria in this talk i am going to describe the design and implementation of crowddb a database system that uses human input via crowdsourcing to process queries that neither database systems nor search engines can answer adequately crowddb uses sql both as a language for posing complex queries and as a way to model data while crowddb leverages many concepts from traditional database systems there are also important differences from a conceptual perspective the traditional closed world assumption for query processing no longer holds for human input which is essentially unbounded from an implementation perspective crowddb uses an operator based query engine but this engine is extended with special operators that generate user interfaces in order to solicit integrate and cleanse human input furthermore performance and cost depend on a number of different factors including worker affinity training fatigue motivation and location real life experiments conducted using amazon mechanical turk show that crowddb is indeed able to process queries that cannot be processed with traditional systems
