computational metaphysics computational metaphysics if we had it a characteristica universalis we should be able to reason in metaphysics and morals in much the same way as in geometry and analysis if controversies were to arise there would be no more need of disputation between two philosophers than between two accountants computistas for it would suffice to take their pencils in their hands to sit down to their slates abacos and to say to each other let us calculate calculemus gottfried wilhelm leibniz the basic project computational metaphysics as we practice it is the implementation and investigation of formal axiomatic metaphysics ie the study of metaphysics using formally represented axioms and premises to derive conclusions in an automated reasoning environment as our axiomatic metaphysics we work within the axiomatic theory of abstract objects developed at the metaphysics research lab at stanford university the basic idea is to represent the axioms and definitions of abstract object theory in the syntax of an automated reasoning system once this is done arbitrary propositions in the language of object theory can either be proved or shown to be independent of the basic axioms and definitions in the past we have used prover9 and its accompanying model finding program mace4 as our automated reasoning system prover9 is the successor to otter this meant representing things in the syntax of prover9 for examples see the links to our work on the theory of forms and the theory of possible worlds more recently we have moved to a more generic framework namely tptp syntax which can be parsed by all current theorem provers and model finders these web pages has been developed in part to support the research we have begun to publish in computational metaphysics the list of papers published so far is steps towards a computational metaphysics in pdf which is in the journal of philosophical logic the paper describes the basic elements of computational metaphysics and gives examples of proofs it then cites this web page as the place to look for the proofs of the other theorems project participants edward n zalta stanford university branden fitelson rutgers university paul e oppenheimer stanford university we d like to thank chris menzel discussions with whom have helped us to see how to improve our results links to the computational projects the computational theory of forms by branden fitelson and edward n zalta the computational theory of possible worlds by branden fitelson and edward n zalta a computational implementation of leibniz's paper of 1690 by edward n zalta a computational implementation of the ontological argument by paul e oppenheimer and edward n zalta
