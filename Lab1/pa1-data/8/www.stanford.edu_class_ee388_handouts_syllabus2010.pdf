ee 388 modern coding theory page 1 ee 388 modern coding theory this class treats modern developments in coding theory these have been the object of rapid research developments over the last 20 years and are becoming increasingly more important in practice the basic philosophy of the course is most of the ideas in modern coding are very intuitive and natural if someone had not invented them a few years ago you could invent them yourself the main focus will be on i codes based on sparse graph constructions ii iterative decoding algorithms for these topics a useful reference is the text book by tom richardson and rudi urbanke for other topics network coding and polar codes we will use handouts and original papers a rough schedule of the topics to be treated is below each of the first 6 week we ll have an homework see below for the rules tue thu topics book reference mar 30 apr 1 code through constraints rate minimum distance channel models iterative decoding error probabil ity block vs symbol binary linear codes bms channels capacity sparse graphs regular ensem bles and how to generate them chapter 1 apr 6 apr 8 decoding for the erasure channel density evolu tion thresholds chapter 3 apr 13 apr 15 irregular ensembles achieving capacity on the era sure channel tornado codes lt codes raptor codes chapter 3 apr 20 apr 22 general bms channels message passing algorithms gallager a b decoder with erasures belief prop agation and quantized versions chapter 4 apr 27 apr 29 density evolution sampling implementation defi nition of thresholds existence of thresholds chapter 4 may 4 may 6 local stability encoding finite length analysis chapter 3 4 a may11 may13 convolutional codes viterbi and bcjr algo rithms trellis coded modulation may 18 may 20 other constructions turbo codes ra codes pro tograph codes muti edge codes chapter 6 7 may 25 may 27 polar codes for channel coding random network coding jun 1 x continuation of topics from last week 1 page 2 homework rules the text of an homework will be handed out every tuesday for the first 6 weeks the text will contain several theoretical questions and an implementation exercise you are expected to think without wiriting anything for me about the theoretical questions the answers will come out during the tuesday and thursday lecture i hope that a part of the answers will come from you work out the implementation exercise you will be required to present the outcome often a plot the program that produced it whatever is the language and sometimes some side information to be specified all this is due one week after the homework is handed out on tuesday final project the final project in fact a long take home exam will be assigned on tuesday may 11 it will consist in constructing a code which optimizes som performance metric under some constrants and simulating it you will carry out this projects in groups of 2 people and present a short report in the last week the report will consist of a specification of the code of the program used to simulate it and of the simulations results project presentations will take place on wednesday june 2 and thursday june 3 morning grading 35 will be assigned to attendance 35 to the 6 homeworks and 30 to the final project 2
