valueiterationagents py licensing information please do not distribute or publish solutions to this project you are free to use and extend these projects for educational purposes the pacman ai projects were developed at uc berkeley primarily by john denero denero cs berkeley edu and dan klein klein cs berkeley edu for more info see http inst eecs berkeley edu cs188 sp09 pacman html import mdp util from learningagents import valueestimationagent class valueiterationagent valueestimationagent please read learningagents py before reading this a valueiterationagent takes a markov decision process see mdp py on initialization and runs value iteration for a given number of iterations using the supplied discount factor def __init__ self mdp discount 0.9 iterations 100 your value iteration agent should take an mdp on construction run the indicated number of iterations and then act according to the resulting policy some useful mdp methods you will use mdp getstates mdp getpossibleactions state mdp gettransitionstatesandprobs state action mdp getreward state action nextstate self mdp mdp self discount discount self iterations iterations self values util counter a counter is a dict with default 0 your code here def getvalue self state return the value of the state computed in __init__ return self values state def getqvalue self state action the q value of the state action pair after the indicated number of value iteration passes note that value iteration does not necessarily create this quantity and you may have to derive it on the fly your code here util raisenotdefined def getpolicy self state the policy is the best action in the given state according to the values computed by value iteration you may break ties any way you see fit note that if there are no legal actions which is the case at the terminal state you should return none your code here util raisenotdefined def getaction self state returns the policy at the state no exploration return self getpolicy state
