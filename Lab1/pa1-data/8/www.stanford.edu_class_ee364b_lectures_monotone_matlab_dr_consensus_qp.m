solves the qp mininimze 1 2 ax b _2 2 subject to fx g using dr consensus note that the code has not been optimized for runtime and is only presened to give an idea of dr consensu for better performance the inner loop should be run in parallel and should use a fast qp solver for small problems eg cvxgen ee364b convex optimization ii s boyd written by eric chu 04 25 11 close all clear all randn state 0 rand state 0 generate problem instance m 1000 n 100 k 50 xtrue randn n 1 a randn m n b a xtrue randn m 1 f randn k n g f xtrue use cvx to find solution cvx_begin variable x n minimize 1 2 sum_square a x b subject to f x g cvx_end xcvx x fstar cvx_optval douglas rachford consensus splitting n 10 number of subproblems max_iters 50 rho 200 z zeros n n xbar zeros n 1 for j 1 max_iters x prox_f z could be done in parallel for i 1 n ai a m n i 1 1 i m n bi b m n i 1 1 i m n fi f k n i 1 1 i k n gi g k n i 1 1 i k n use cvx to solve prox operator zi z i cvx_solver sdpt3 cvx_begin quiet variable xi n minimize 1 2 sum_square ai xi bi rho 2 sum_square xi zi subject to fi xi gi cvx_end x i xi end xbar_prev xbar xbar mean x 2 record infeasibilities infeas j sum pos f xbar g record objective value f j 1 2 sum_square a xbar b update z z xbar ones 1 n x xbar xbar_prev ones 1 n end make plots subplot 2 1 1 semilogy 1 max_iters infeas ylabel infeas set gca fontsize 18 axis 1 max_iters 10 2 10 2 subplot 2 1 2 plot 1 max_iters f 1 max_iters fstar fstar k xlabel k ylabel f axis 1 max_iters 300 2000 set gca fontsize 18 print depsc dr_consensus_qp eps
