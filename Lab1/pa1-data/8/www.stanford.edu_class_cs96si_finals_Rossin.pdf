george rossin cs96si project abstract for my project i wrote a scheme interpreter in haskell t page 1 george rossin cs96si project abstract for my project i wrote a scheme interpreter in haskell that implements a sizable subset of r5rs scheme the objective of my project was to familiarize myself with the haskell language in particular its i o mutable state dynamic typing error handling and parsing features while simultaneously reinforcing my knowledge of scheme i acquired over the quarter the parser library that i used for this assignment is called parsec parsec is an industrial strength monadic parser combinator library for haskell that can parse context sensitive infinite look ahead grammars however it performs best on ll 1 grammars through using it i not only learned about haskell monads but a little bit about the lexical and syntax analysis that goes behind compilers the beauty of the parsec library is that it allows the user to express a language in the exact same syntax as a context free grammar the key is in the combinator function which allows the user to create larger expressions by combining different options in this sense all options are checked in a left recursive function one at a time which is the reason why it is most effective with ll 1 grammars left recursive lookahead 1 by the end of the project i was able to implement functions lambdas lexical scoping symbols strings integers list manipulation and assignment in scheme however if i were to continue with the project other features i could add are scheme macros which we learned about this quarter other standard parts of scheme such as let bindings continuations and exceptions with stack unwinding overall this project was rewarding because i was able to become much more comfortable coding both haskell and scheme the two languages that focused on this quarter by working on this project figure 1 sample output from scheme interpreter
