streaming xpath engine streaming xpath engine oleg slezberg amruta joshi overview motivation querying streaming xml xpath challenges predicates nesting basic objective comparative analysis of algorithms implementation implemented engine in java using jdk 1.4 2 apache xerces 2.6 2 for parsing both xml and xpath used existing xsq java implementation benchmark for evaluation xpathmark xstream builds parse tree for input query maintains an event stack keeps matching input streaming document for each node our contributions correction verification performance figures recursive query handling query evaluation support performance benchmark xpathmark set of 23 queries mostly predicate queries criteria queries per second rate test setup run on elaine2 900 mhz 2 cpu processor results xsq qps 4.39 coverage 17 turboxpath qps 5.75 coverage 21 time xml parsing processing qps xstream 30 faster better coverage on given benchmark recursive query handling for query node n and elements e1 e2 in d both e1 and e2 match n e1 contains e2 example document a a b a b b a query a b fa based algorithms exponential number of states query evaluation support 2 questions filtering does this document match the query f1 xml boolean evaluation what parts of the document match the query f2 xml xml modifications output buffers for predicate owner predicate node buffers predicate evaluation multiple simultaneous queries combine the queries or ing them together q q 1 q 2 q n resulting query has multiple output nodes associate a query id with output node conclusion streaming xpath engine all objectives met xpath stream evaluator implemented performance analysis algorithm correction and enhancements future directions backward axis support function support reuse predicate evaluation model extended expression type support predicate pipelining
