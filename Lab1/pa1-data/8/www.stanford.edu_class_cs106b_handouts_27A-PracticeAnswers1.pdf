answers to practice midterm exam 1 page 1 eric roberts handout 27a cs106b february 6 2012 answers to practice midterm exam 1 review session wednesday february 8 7 00 9 00p m 420 041 midterm 1 thursday february 9 3 15 5 15p m cubberley auditorium midterm 2 thursday february 9 7 00 9 00p m gates b 01 and b 03 problem 1 tracing c++ programs and big o 10 points this problem can be solved either by following through the computation or by figuring out what each function does in this case it is easier to undertake the latter approach the enigma function computes the product of n1 and n2 by recursively summing n1 copies of n2 the mystery function then uses enigma to multiply n copies of the integer 2 the value of mystery n is therefore 2n which means that mystery 3 returns 8 computing the complexity order requires noticing that the computation of mystery n makes n calls to enigma given the coding of mystery each call to enigma requires a constant amount of work because the first argument is always 2 the complexity is therefore proportional to n times some constant which is o n problem 2 vectors grids stacks and queues 10 points there are many strategies for solving this problem a linear time solution that uses the remainder operator to achieve the wrap around semantics of roll looks like this page 2 2 problem 3 lexicons maps and iterators 15 points page 3 3 problem 4 recursive functions 10 points the following implementation computes nk in o log k time and if the assignments seem inelegant here is another coding in a more conventional recursive form page 4 4 problem 5 recursive procedures 15 points once again there are several strategies you might use to solve this problem the one that probably requires the least amount of new work is to adapt the listpermutations code from chapter 8 to generate all permutations of the domino vector and then see if any of them contain only dominos that match end for end the following implementation is somewhat more efficient
