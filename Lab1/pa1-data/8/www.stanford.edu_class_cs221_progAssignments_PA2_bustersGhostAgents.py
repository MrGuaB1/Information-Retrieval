bustersghostagents py licensing information please do not distribute or publish solutions to this project you are free to use and extend these projects for educational purposes the pacman ai projects were developed at uc berkeley primarily by john denero denero cs berkeley edu and dan klein klein cs berkeley edu for more info see http inst eecs berkeley edu cs188 sp09 pacman html import ghostagents from game import directions from game import actions from util import manhattandistance import util class stationaryghost ghostagents ghostagent def getdistribution self state dist util counter dist directions stop 1.0 return dist class dispersingghost ghostagents ghostagent chooses an action that distances the ghost from the other ghosts with probability spreadprob def __init__ self index spreadprob 0.5 self index index self spreadprob spreadprob def getdistribution self state ghoststate state getghoststate self index legalactions state getlegalactions self index pos state getghostposition self index isscared ghoststate scaredtimer 0 speed 1 if isscared speed 0.5 actionvectors actions directiontovector a speed for a in legalactions newpositions pos 0 a 0 pos 1 a 1 for a in actionvectors get other ghost positions others i for i in range 1 state getnumagents if i self index for a in others assert state getghoststate a none ghost position unspecified in state otherghostpositions state getghostposition a for a in others if state getghostposition a 1 1 for each action get the sum of inverse squared distances to the other ghosts sumofdistances for pos in newpositions sumofdistances append sum 1 manhattandistance pos g 2 for g in otherghostpositions bestdistance min sumofdistances numbest bestdistance dist for dist in sumofdistances count true distribution util counter for action distance in zip legalactions sumofdistances if distance bestdistance distribution action self spreadprob numbest distribution action 1 self spreadprob len legalactions return distribution
