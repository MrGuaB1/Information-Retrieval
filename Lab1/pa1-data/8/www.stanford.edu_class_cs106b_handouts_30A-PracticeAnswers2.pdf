answers to practice midterm exam 2 page 1 eric roberts handout 30a cs106b february 8 2012 answers to practice midterm exam 2 review session wednesday february 8 7 00 9 00p m 420 041 midterm 1 thursday february 9 3 15 5 15p m cubberley auditorium midterm 2 thursday february 9 7 00 9 00p m gates b 01 and b 03 problem 1 tracing c++ programs and big o 10 points if you think about what's happening in the puzzle function it should be clear that the function computes the number of moves required to solve the tower of hanoi problem thus the value of puzzle 4 is 15 to understand the complexity order of the computation it helps to draw a tree of the computations involved which after abbreviating puzzle to p to save space looks like this for puzzle 4 each new level doubles the amount of work so the total amount of work must be o 2n another way to obtain this same result is that the calculation of puzzle n requires twice as many additions as the original tower of hanoi puzzle requires moves to solve the problem for n disks if tower of hanoi is exponential this function must be as well note that the efficiency is a property of the implementation and not of the underlying mathematical function if the implementation of puzzle were changed to int puzzle int n if n 0 return 0 else return 2 puzzle n 1 1 the complexity would be o n even though it computes the same value 4 p 3 p 2 p 1 p 0 p 0 p 1 p 0 p 0 p 2 p 1 p 0 p 0 p 1 p 0 p 0 p 3 p 2 p 1 p 0 p 0 p 1 p 0 p 0 p 2 p 1 p 0 p 0 p 1 p 0 p 0 p page 2 2 problem 2 vectors grids stacks and queues 10 points problem 3 lexicons maps and iterators 15 points page 3 3 problem 4 recursive functions 10 points problem 5 recursive procedures 15 points
