no slide title computers ethics and public policy cs 181 course description course staff professor eric roberts eroberts cs tas michael abercrombie mabercr stanford priya chawla priyac stanford shrey gupta shreyg stanford william rowan wmrowan stanford thaisan tonthat tonthat stanford thought questions for today what ethical decisions have you faced or do you expect to face in your own career 1 what public policy issues involving computing do you feel are likely to prove most important over the next few decades 2 a brief history of cs181 stanford graduated its first computer science majors in 1986 at that time computer science was the only engineering major that did not require an ethics in society course that soon changed a brief history of cs181 a brief history of cs181 a brief history of cs181 three views of computer ethics source terry winograd computers ethics and social responsibility 1991 three views of computer ethics three views of computer ethics week by week schedule course overview scientific ethics and the military week 1 software reliability and risk intro to ethical philosophy week 2 applying ethical philosophy hacking and security week 3 computing and economics intellectual property week 4 antitrust in the computing industry microsoft and google week 5 the culture of cyberspace work in the computing industry week 6 influencing policymakers promoting democratic access week 7 the nature of online communities global politics week 8 unintended consequences of the digital age week 9 coming attractions the day after trinity j robert oppenheimer and the atomic bomb tuesday march 29 hewlett 201 7 30 9 00 course requirements 5 7 page paper on the risk of software failures in critical systems short paper 1 weekly 1 2 page papers on the reading reaction papers interactive policy discussion of intellectual property online forum 5 7 page policy proposal based on the online forum short paper 2 group project covering a computing policy issue final project abstract annotated bibliography web site miniconference presentation on june 1 2 computing is used to solve hard problems the discipline of software engineering has not had centuries in which to mature software has high system complexity and is therefore difficult to distribute among members of a large team bugs are ubiquitous and inevitable software systems are discrete rather than continuous it is impossible to overengineer such systems software systems are inherently chaotic small changes in initial conditions generate massive changes in results the economics of software systems means that even flawed products can have tremendous economic value what makes computing different thought questions for today what ethical decisions have you faced or do you expect to face in your own career 1 what public policy issues involving computing do you feel are likely to prove most important over the next few decades 2 the end
