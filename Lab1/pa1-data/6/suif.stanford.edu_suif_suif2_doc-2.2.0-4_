a suif infrastructure guide the suif 2 compiler system this page contains a guide to the documentation of the suif2 system which is built as part of the national compiler infrastructure project the suif2 representation is completely different from the suif1 representation the released system includes conversion tools between the suif 1 and suif 2 representations to allow passes written in both systems to work together table of contents overview of the system describes the basic concepts in the design of the system getting started a quick step by step guide to download and run the suif compiler directory structure an overview of the directory structure in the system base system the stanford release includes the base system and a set of advanced analysis available programs and passes the suif infrastructure includes a set of programs and passes that can be combined to create different systems writing your own suif pass the suif infrastructure includes a set of tools to allow users to define their own passes overview of the suif2 system an overview of the suif compiler infrastructure this document introduces the major concepts in the system namely a module subsystem that allows passes to be composed easily an extensible suif representation that allows programmers to extend the representation without requiring updating the infrastructure it also provides an overview of the suif system architecture and describes the suif extensible intermediate representation tutorial presentation at the acm sigplan 2000 conference on programming language design and implementation june 2000 vancouver bc overview of the suif system monica lam powerpoint postscript introduction to the basic infrastructure david heine powerpoint postscript introduction to the machsuif infrastructure michael d smith powerpoint postscript introduction to the osuif infrastructure urs hoelzle and holger kienle powerpoint postscript osuif a closer look holger kienle powerpoint postscript work in progress affine program transforms amy lim powerpoint postscript interprocedural program analysis david heine vladimir livshits brian murphy chris unkel hansel wan powerpoint postscript introduction to suif2 powerpoint postscript revised version of the tutorial at the acm sigplan 99 conference on programming language design and implementation may 4 1999 atlanta ga getting started download the compiler at the site you can download binary of the c front end this is a front end based on the edg front end it is freely available to users for research purposes but registration is required sources of the basic suif system the system is copyrighted but it is freely available for research or commercial purposes follow the instructions in the readme file to build the system run the compiler build guide for windows how to build & work with suif 2 under nt using microsoft visual c++ directory structure organization of the suif source directories a high level description of all the directories to help you find the sources base infrastructure available programs and suif passes the suif programs and passes guide is a document containing a list of the currently released programs and passes the suif compiler infrastructure is designed to be modular so as to facilitate research in compilers users can construct a custom compiler without writing any new code by combining different standalone programs that communicate using files and invoking different passes using the suifdriver program that operate on program representations in memory writing your own suif pass the suif program representation guide detailed documentation of the representation postscript version quick references class hierarchy diagram definition of the suif representation basic nodes basicnodes hoof suif nodes suifnodes hoof cfe nodes cfenodes hoof the suif programming guide this document describes some of the details in writing suif passes postscript version the suif interfaces guide this provides a reference to all the header files that are useful for writing new compiler passes simple examples a pass module illustrates how to write a simple suif pass that counts the number of direct and indirect calls using an iterator and a walker an ir module using hoof illustrates how to define and generate a simple suif ir module from a hoof specification the suif system programmmer's reference manual a reference manual by the suif classes and header files generated by doxygen a great programmer's reference but it is large internal suif implementation documentation generation of suif objects from a hoof file
