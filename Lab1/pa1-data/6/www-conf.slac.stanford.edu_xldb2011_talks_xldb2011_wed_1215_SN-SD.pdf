sn versus sd the tradeoffs michael stonebraker page 1 sn versus sd the tradeoffs michael stonebraker page 2 shared nothing architecture page 3 shared nothing jelly bean nodes local memory local disk connected together typically tpc ip but could be something else rmda page 4 sn proponents all commercial dbmss except oracle page 5 sn features queries send the query to the data parallel query execution if possible compute inside queries as user defined functions parallel execution if possible all nodes equal page 6 shared disk architecture page 7 shared disk any node can access any data directly through a read write interface popularized by sun hp in the 1990's pushed by all san vendors and seemingly by hpc community page 8 typical hpc configuration compute server often with small local scratch disk file server page 9 shared disk features queries send the data to the query not vice versa compute user program disconnected from data storage parallelism user controlled all nodes not equal page 10 high level bit are you compute centric and assuming you are cpu bound are you data centric page 11 my prediction high end science hes will move over time to dbmss from file systems and low end science for that matter to avoid drowning in big data and avoid encoding metadata in file names and other bad habits page 12 my prediction dbms will run sn model way faster to utilize user defined functions udfs over time hes will move user code to udfs side benefit better share ability page 13 my prediction ie sn will win most hpc architectures are incompatible with this future scenario maybe all that money can be liberated toward a better use page 14 test case try running ss db on your favorite hpc
