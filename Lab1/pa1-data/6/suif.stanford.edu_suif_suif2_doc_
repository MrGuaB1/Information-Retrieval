a suif infrastructure guide the suif 2 compiler system this page contains a guide to the documentation of the suif2 system which is built as part of the national compiler infrastructure project the suif2 representation is completely different from the suif1 representation the released system includes conversion tools between the suif 1 and suif 2 representations to allow passes written in both systems to work together table of contents overview of the system getting started available programs and passes writing your own suif pass overview of the suif2 system an overview of the suif compiler infrastructure this document introduces the major concepts in the system namely a module subsystem that allows passes to be composed easily an extensible suif representation that allows programmers to extend the representation without requiring updating the infrastructure it also provides an overview of the suif system architecture and describes the suif extensible intermediate representation an overview of the suif2 system powerpoint postscript presented at the darpa nsf project review on december 7 1999 advanced analysis in suif2 and future work powerpoint postscript presented at the darpa nsf project review on december 7 1999 getting started download the compiler the compiler is available at our industrial partner portland group inc s site at the site you can download binary of the c front end this is a front end based on the edg front end it is freely available to users for research purposes but registration is required sources of the basic suif system the system is copyrighted but it is freely available for research or commercial purposes here is the latest snapshot that contains the suif1 and suif2 conversion package follow the instructions in the readme file to build the system run the compiler available programs and suif passes the suif programs and passes guide is a document containing a list of the currently released programs and passes the suif compiler infrastructure is designed to be modular so as to facilitate research in compilers users can construct a custom compiler without writing any new code by combining different standalone programs that communicate using files and invoking different passes using the suifdriver program that operate on program representations in memory writing your own suif pass the following collects together some of the high level information useful for learning how to write your own suif pass the suif program representation all the suif data structures are derived from the object class suif objects are described in hoof files which are translated to c++ sources that provide a common set of interfaces the suif program representation guide detailed documentation of the representation postscript version quick references class hierarchy diagram definition of the suif representation basic nodes basicnodes hoof suif nodes suifnodes hoof cfe nodes cfenodes hoof organization of the suif source directories this provides a high level description of all the directories to help you find the sources the suif programming guide this document describes some of the details in writing suif passes postscript version the suif interfaces guide this provides a reference to all the header files that are useful for writing new compiler passes simple examples a pass module illustrates how to write a simple suif pass that counts the number of direct and indirect calls using an iterator and a walker an ir module using hoof illustrates how to define and generate a simple suif ir module from a hoof specification the suif system programmmer's reference manual a reference manual by the suif classes and header files generated by doxygen a great programmer's reference but it is large internal suif implementation documentation generation of suif objects from a hoof file
