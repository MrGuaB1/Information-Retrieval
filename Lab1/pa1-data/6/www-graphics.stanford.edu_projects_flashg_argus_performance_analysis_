argus performance analysis argus performance analysis performance data are collected on both real machines and simos a cycle accurate machine simulation environment simos not only can simulate real systems like the sgi challenge it is also capable of simulating hypothetical machines execution times measured on real machines provide good summary of argus performance pc sampling and basic block counting are two tools we often use to give a first order impression of performance bottlenecks while sufficient in many circumstances these tools are often insufficient in examining the complicated behavior of argus because the implementation uses an internal multithreading library with its own scheduling routine across multiple processes using simos we divide processor cycles into various cataglories such as operating system vs user program computation vs communication and algorithm overhead vs actual rendering work this approach quantifies varies tasks of parallel rendering and the differences between graphics algorithms programming for good memory behavior is extremely time consuming and machine specific however not tuning argus on a specific system will yield performance numbers clouded by poor memory access patterns we circumvent this problem by simulating a machine with perfect memory this allows us to measure the theoritical limit of computation for different algorithms predicting how argus will perform on future platform is accomplished by running argus on hypothetical machines with advanced memory and processor characteristics miltchen graphics stanford edu
